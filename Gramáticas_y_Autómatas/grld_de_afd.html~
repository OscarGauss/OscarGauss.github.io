<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <title>GRLD raiz no este en la parte derecha</title>
    <link href="style.css" type="text/css" rel="stylesheet"/>
    <link href="vis.css" rel="stylesheet" type="text/css" />
    <script type="text/javascript" src="vis.js"></script>
	<script src="codigo.js"></script>





 <style type="text/css">
    #frame {
      width: 100%;
      height: 99%;
    }
    #frame td {
      padding: 10px;
      height: 100%;
    }
    #error {
      color: red;
    }
    /*#data {
    //width: 100%;
    //height: 100%;
      //border: 1px solid #d3d3d3;
    }*/
    #mynetwork {/*
      float: left;*/
      width: 100%;
      height: 300px;
      border: 1px solid #d3d3d3;
      box-sizing: border-box;
      -moz-box-sizing: border-box;
      overflow: hidden;
    }
    textarea.example {
      display: none;
    }
  </style>

	
  </head>

  <body>
    <header>
      <h1>Construcción de una GRLD a partir de un AFD A</h1>
      <div id="boton" onclick="procesar_grld_de_afd('form1', 'form2')">generar</div>
    </header>
    <div id="contenido">
	  <table class='tablaprincipal' width='100%'>
        <tr>
		  <th width='20%'>
            <h2>Autómata Finito Deterministico</h2>
		  </th>
		  <th width='60%'>
            <h2>Grafica del automata</h2>
          </th>
		  <th width='20%'>
			<h2>Gramática Regular Derecha</h2>
		  </th>
        </tr>
		
        <tr>
		  <td>
			<form name="automata" id="form1">
			  <p>Conjunto finito no vacio de estados K</p>
			  <p><input type="text" name="nt" id="form1K" placeholder="q1 q2 q3" /></p>
			  <p>Alfabeto de entrada &Sigma;</p>
			  <p><input type="text" name="t" id="form1S"  placeholder="a b" /></p>
			  <p>Estado inicial</p>
			  <p>q1</p>
			  <p>Conjunto de estados finales</p>
			  <p><input type="text" name="t" id="form1F"  placeholder="q2 q3" /></p>
			  <p>Función de transición &delta;
                <input type="text" name="np" id="form1T" placeholder="2" maxlength="2" size="4" />
                <input type="button" value="CLIC" onclick="crear_tabla_afd(document.getElementById('form1T').value, 'form1')"/>
			  </p>
            </form>
		  </td>
		  <td>

			<button id="draw">Draw</button>
			<span id="error"></span>
		
			<textarea id="data" class="example">
  digraph {
  node [shape=circle fontSize=16]
  edge [length=100, color=gray, fontColor=black]

  A -> A[label=0.5];
  B -> B[label=1.2] -> C[label=0.7] -- A;
  B -> D;
  D -> {B; C}
  D -> E[label=0.2];
  F -> F;
  A [
  fontColor=white,
  color=red,
  ]
  }
	</textarea>
			<div id="mynetwork"></div>
			


			<script>
			  var network = null;
			  var data = null;
			  var btnDraw = document.getElementById('draw');
			  var txtData = document.getElementById('data');
			  var txtError = document.getElementById('error');
			  btnDraw.onclick = draw;
			  // resize the network when window resizes
			  window.onresize = function () {
			  network.redraw()
			  };
			  function destroy() {
			  if (network !== null) {
			  network.destroy();
			  network = null;
			  }
			  }
			  // parse and draw the data
			  function draw () {
			  destroy();
			  try {
			  txtError.innerHTML = '';
			  // Provide a string with data in DOT language
			  data = {
			  dot: txtData.value
			  };
			  // create a network
			  var container = document.getElementById('mynetwork');
			  var options = {};
			  network = new vis.Network(container, data, options);
			  }
			  catch (err) {
			  // set the cursor at the position where the error occurred
			  var match = /\(char (.*)\)/.exec(err);
			  if (match) {
			  var pos = Number(match[1]);
			  if(txtData.setSelectionRange) {
			  txtData.focus();
			  txtData.setSelectionRange(pos, pos);
			  }
			  }
			  // show an error message
			  txtError.innerHTML =  err.toString();
			  }
			  }
			  /**
			  * Draw an example
			  * @param {String} id HTML id of the textarea containing the example code
			  */
			  function drawExample(id) {
			  alert("asdf");
			  txtData.value = document.getElementById(id).value;
			  draw();
			  }
			</script>

		  </td>
		  <td>
			<form name="gramatica" id="form2">
			  <p>Alfabeto de No Terminales</p>
			  <p><input type="text" name="nt" id="form2nt" /></p>
			  <p>Alfabeto de Terminales</p>
			  <p><input type="text" name="t" id="form2t" /></p>
			  <p>Símbolo raíz S</p>
			  <p>Producciones<input type="text" name="np" id="form2np" maxlength="2" size="4" />
			  </p>
            </form>
		  </td>
		<tr>
		  <td colspan="3">
			<div id="boton" onclick="limpiar_reload('form1', 'form2')">Limpiar</div>
		  </td>
		</tr>
        </tr>
	  </table>
    </div>



	

	
	  <textarea id="example1" class="example">
  digraph {
  node [shape=circle fontSize=16]
  edge [length=100, color=gray, fontColor=black]

  A -> A[label=0.5];
  B -> B[label=1.2] -> C[label=0.7] -- A;
  B -> D;
  D -> {B; C}
  D -> E[label=0.2];
  F -> F;
  A [
  fontColor=white,
  color=red,
  ]
  }
</textarea>

<textarea id="example2" class="example">
  digraph topology
  {
  node[shape=circle fontSize=12]
  edge[length=170 fontSize=12]
  "10.0.255.1" -> "10.0.255.3"[label="1.000"];
  "10.0.255.1" -> "10.0.255.2"[label="1.000"];
  "10.0.255.1" -> "10.0.255.2"[label="1.000"];
  "10.0.255.1" -> "10.0.255.3"[label="1.000"];
  "10.0.255.2" -> "10.0.255.1"[label="1.000"];
  "10.0.255.2" -> "10.0.255.3"[label="1.000"];
  "10.0.255.3" -> "10.0.255.1"[label="1.000"];
  "10.0.255.3" -> "10.0.255.2"[label="1.000"];
  "10.0.255.3" -> "10.0.3.0/24"[label="HNA", shape=solid];
  "10.0.3.0/24"[shape=box];
  "10.0.255.2" -> "10.0.2.0/24"[label="HNA"];
  "10.0.2.0/24"[shape=box];
  "10.0.255.1" -> "10.0.1.0/24"[label="HNA"];
  "10.0.1.0/24"[shape=box];
  }
</textarea>

<textarea id="example3" class="example">
  digraph G  {
  // note: not all attributes are recognized and supported by Network
  //       unrecognized attributes are ignored

  node[width=.25,height=.375,fontsize=15]
  node [shape=filled fillcolor=#F1AAF0]
  0-> 0 ;
  1-> 1 ;
  2-> 2 ;
  3-> 3 ;
  4-> 4 ;
  5-> 5 ;
  6-> 6 ;
  7-> 5 ;
  8-> 8 ;
  9-> 9 ;
  10-> 10 ;
  11-> 10 ;
  12-> 12 ;
  13-> 5 ;
  14-> 10 ;
  15-> 0 ;
  }
</textarea>

	  
  </body>
</html>
